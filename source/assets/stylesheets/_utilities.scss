
.inline-list {
  margin-left: 0;
  list-style: none;

  li {
    float: none;
    display: inline-block;
    padding: 0;
    margin: 0 1.25rem 0 0;
  }
}


// Add colour tint to an element with photo-background, DRY way
// =======================================

// In your CSS declaration:
// .element {
//    background: url(...);
//    @include background-tint(rgba($primary-color, 0.2));
// }

@mixin background-tint($tint) {
  position: relative;

  * {
    position: relative;
    z-index: 2;
  }

  &:before {
    content: '';
    width: 100%;
    height: 100%;
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 0;
    background: $tint;
  }
}


// Perfectly align elements horizontally or vertically inside their container
// =======================================

@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  transform: translate3D(0, -50%, 0);
}

@mixin horizontal-align($position: relative) {
  position: $position;
  left: 50%;
  transform: translate3D(-50%, 0, 0);
}

// HTML-driven approach (good for rapid prototyping):
// Apply .v-align or .h-align to an HTML element that you're centering
.v-align {
  @include vertical-align();
}

.h-align {
  @include horizontal-align();
}

// CSS-driven approach:
// Use alignment mixin with any CSS element, but always set width for it
// Otherwise it will span 100% of the parent element's width
.some-class {
  @include vertical-align();
  width: 80%;
}

// =======================================


// Vertical Push
// (adding top, bottom or both margins to it, with simple classes)
// =======================================

.push-up {
  margin-top: $v-spacing / 2;

  // Boostrap: @media screen and (min-width: $screen-lg) {
  @include breakpoint(large) {
    margin-top: $v-spacing;
  }
}

  .push-up-high {
    margin-top: $v-spacing;

    // Boostrap: @media screen and (min-width: $screen-lg) {
    @include breakpoint(large) {
      margin-top: $v-spacing * 1.5;
    }
  }

.push-down {
  margin-bottom: $v-spacing / 2;

  // Boostrap: @media screen and (min-width: $screen-lg) {
  @include breakpoint(large) {
    margin-bottom: $v-spacing;
  }
}

  .push-down-low {
    margin-bottom: $v-spacing;

    // Boostrap: @media screen and (min-width: $screen-lg) {
    @include breakpoint(large) {
      margin-bottom: $v-spacing * 1.5;
    }
  }

// =======================================
